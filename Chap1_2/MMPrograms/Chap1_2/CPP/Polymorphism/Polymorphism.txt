#include <iostream>
using namespace std;

class X
{
  public:
	int x;
	X() { x = 5; }
	void xx()
	{
		x = x + 10;
	}
};
class A: public X
{
  public:
    int a;
    A() {a = 1;}
    virtual void f() 
    {
       a = a + 10;
    }
   
    virtual void g()
    {
       a = a - 10;
    }
};


class B: public A
{
  public:
   int b;
   B() {b = 10;}
   void f() 
   {
      a = a + 100;
      b = b + 200;
   }

   void h()
   {
     a = 0;
     b = 0;
   } 
};

class C: public A
{
  public:
   int c;
   C() {c = 100;}
   void g()
   {
      a = a - 100;
      c = c - 200;
   }
};

int main()
{
   A *ap1 = new A();
   A *bp1 = new B();
   A *bp2 = new B();
   A *cp1 = new C();

   ap1->f();
   ap1->g();
   ap1->xx();

   bp1->f();
   bp2->g();
   ((B *)bp1)->h();
   bp2->xx();

   cp1->f();
   cp1->g();
   cp1->xx();
}

// The following code is generated with /GR- option
// The /GR- option removes RTTI (Run-Time Type Information)
// cl /FAcs /Od /GR- file.cpp
; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25834.0 

	TITLE	c:\K-State\cis450\Programs\CoursePrograms\Polymorphism\Polymorphism.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0X@@QAE@XZ					; X::X
PUBLIC	?xx@X@@QAEXXZ					; X::xx
PUBLIC	??0A@@QAE@XZ					; A::A
PUBLIC	?f@A@@UAEXXZ					; A::f
PUBLIC	?g@A@@UAEXXZ					; A::g
PUBLIC	??0B@@QAE@XZ					; B::B
PUBLIC	?f@B@@UAEXXZ					; B::f
PUBLIC	?h@B@@QAEXXZ					; B::h
PUBLIC	??0C@@QAE@XZ					; C::C
PUBLIC	?g@C@@UAEXXZ					; C::g
PUBLIC	_main
PUBLIC	??_7A@@6B@					; A::`vftable'
PUBLIC	??_7B@@6B@					; B::`vftable'
PUBLIC	??_7C@@6B@					; C::`vftable'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_7C@@6B@
CONST	SEGMENT
??_7C@@6B@ DD	FLAT:?f@A@@UAEXXZ			; C::`vftable'
	DD	FLAT:?g@C@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7B@@6B@
CONST	SEGMENT
??_7B@@6B@ DD	FLAT:?f@B@@UAEXXZ			; B::`vftable'
	DD	FLAT:?g@A@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7A@@6B@
CONST	SEGMENT
??_7A@@6B@ DD	FLAT:?f@A@@UAEXXZ			; A::`vftable'
	DD	FLAT:?g@A@@UAEXXZ
CONST	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
_TEXT	SEGMENT
tv142 = -48						; size = 4
$T1 = -44						; size = 4
tv129 = -40						; size = 4
$T2 = -36						; size = 4
tv84 = -32						; size = 4
$T3 = -28						; size = 4
tv72 = -24						; size = 4
$T4 = -20						; size = 4
_bp2$ = -16						; size = 4
_bp1$ = -12						; size = 4
_cp1$ = -8						; size = 4
_ap1$ = -4						; size = 4
_main	PROC

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H

; 63   :    A *ap1 = new A();

  00006	6a 0c		 push	 12			; 0000000cH
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4
  00010	89 45 ec	 mov	 DWORD PTR $T4[ebp], eax
  00013	83 7d ec 00	 cmp	 DWORD PTR $T4[ebp], 0
  00017	74 0d		 je	 SHORT $LN3@main
  00019	8b 4d ec	 mov	 ecx, DWORD PTR $T4[ebp]
  0001c	e8 00 00 00 00	 call	 ??0A@@QAE@XZ		; A::A
  00021	89 45 e8	 mov	 DWORD PTR tv72[ebp], eax
  00024	eb 07		 jmp	 SHORT $LN4@main
$LN3@main:
  00026	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN4@main:
  0002d	8b 45 e8	 mov	 eax, DWORD PTR tv72[ebp]
  00030	89 45 fc	 mov	 DWORD PTR _ap1$[ebp], eax

; 64   :    A *bp1 = new B();

  00033	6a 10		 push	 16			; 00000010H
  00035	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax
  00040	83 7d e4 00	 cmp	 DWORD PTR $T3[ebp], 0
  00044	74 0d		 je	 SHORT $LN5@main
  00046	8b 4d e4	 mov	 ecx, DWORD PTR $T3[ebp]
  00049	e8 00 00 00 00	 call	 ??0B@@QAE@XZ		; B::B
  0004e	89 45 e0	 mov	 DWORD PTR tv84[ebp], eax
  00051	eb 07		 jmp	 SHORT $LN6@main
$LN5@main:
  00053	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN6@main:
  0005a	8b 4d e0	 mov	 ecx, DWORD PTR tv84[ebp]
  0005d	89 4d f4	 mov	 DWORD PTR _bp1$[ebp], ecx

; 65   :    A *bp2 = new B();

  00060	6a 10		 push	 16			; 00000010H
  00062	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00067	83 c4 04	 add	 esp, 4
  0006a	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
  0006d	83 7d dc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00071	74 0d		 je	 SHORT $LN7@main
  00073	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  00076	e8 00 00 00 00	 call	 ??0B@@QAE@XZ		; B::B
  0007b	89 45 d8	 mov	 DWORD PTR tv129[ebp], eax
  0007e	eb 07		 jmp	 SHORT $LN8@main
$LN7@main:
  00080	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN8@main:
  00087	8b 55 d8	 mov	 edx, DWORD PTR tv129[ebp]
  0008a	89 55 f0	 mov	 DWORD PTR _bp2$[ebp], edx

; 66   :    A *cp1 = new C();

  0008d	6a 10		 push	 16			; 00000010H
  0008f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00094	83 c4 04	 add	 esp, 4
  00097	89 45 d4	 mov	 DWORD PTR $T1[ebp], eax
  0009a	83 7d d4 00	 cmp	 DWORD PTR $T1[ebp], 0
  0009e	74 0d		 je	 SHORT $LN9@main
  000a0	8b 4d d4	 mov	 ecx, DWORD PTR $T1[ebp]
  000a3	e8 00 00 00 00	 call	 ??0C@@QAE@XZ		; C::C
  000a8	89 45 d0	 mov	 DWORD PTR tv142[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN10@main
$LN9@main:
  000ad	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN10@main:
  000b4	8b 45 d0	 mov	 eax, DWORD PTR tv142[ebp]
  000b7	89 45 f8	 mov	 DWORD PTR _cp1$[ebp], eax

; 67   : 
; 68   :    ap1->f();

  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _ap1$[ebp]
  000bd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _ap1$[ebp]
  000c2	8b 02		 mov	 eax, DWORD PTR [edx]
  000c4	ff d0		 call	 eax

; 69   :    ap1->g();

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _ap1$[ebp]
  000c9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _ap1$[ebp]
  000ce	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d1	ff d0		 call	 eax

; 70   :    ap1->xx();

  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _ap1$[ebp]
  000d6	83 c1 04	 add	 ecx, 4
  000d9	e8 00 00 00 00	 call	 ?xx@X@@QAEXXZ		; X::xx

; 71   : 
; 72   :    bp1->f();

  000de	8b 4d f4	 mov	 ecx, DWORD PTR _bp1$[ebp]
  000e1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e3	8b 4d f4	 mov	 ecx, DWORD PTR _bp1$[ebp]
  000e6	8b 02		 mov	 eax, DWORD PTR [edx]
  000e8	ff d0		 call	 eax

; 73   :    bp2->g();

  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _bp2$[ebp]
  000ed	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _bp2$[ebp]
  000f2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000f5	ff d0		 call	 eax

; 74   :    ((B *)bp1)->h();

  000f7	8b 4d f4	 mov	 ecx, DWORD PTR _bp1$[ebp]
  000fa	e8 00 00 00 00	 call	 ?h@B@@QAEXXZ		; B::h

; 75   :    bp2->xx();

  000ff	8b 4d f0	 mov	 ecx, DWORD PTR _bp2$[ebp]
  00102	83 c1 04	 add	 ecx, 4
  00105	e8 00 00 00 00	 call	 ?xx@X@@QAEXXZ		; X::xx

; 76   : 
; 77   :    cp1->f();

  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _cp1$[ebp]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	8b 4d f8	 mov	 ecx, DWORD PTR _cp1$[ebp]
  00112	8b 02		 mov	 eax, DWORD PTR [edx]
  00114	ff d0		 call	 eax

; 78   :    cp1->g();

  00116	8b 4d f8	 mov	 ecx, DWORD PTR _cp1$[ebp]
  00119	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011b	8b 4d f8	 mov	 ecx, DWORD PTR _cp1$[ebp]
  0011e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00121	ff d0		 call	 eax

; 79   :    cp1->xx();

  00123	8b 4d f8	 mov	 ecx, DWORD PTR _cp1$[ebp]
  00126	83 c1 04	 add	 ecx, 4
  00129	e8 00 00 00 00	 call	 ?xx@X@@QAEXXZ		; X::xx

; 80   : }

  0012e	33 c0		 xor	 eax, eax
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ?g@C@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?g@C@@UAEXXZ PROC					; C::g, COMDAT
; _this$ = ecx

; 55   :    {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 56   :       a = a - 100;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	83 e9 64	 sub	 ecx, 100		; 00000064H
  00010	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00013	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 57   :       c = c - 200;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001c	81 e9 c8 00 00
	00		 sub	 ecx, 200		; 000000c8H
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 58   :    }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?g@C@@UAEXXZ ENDP					; C::g
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ??0C@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0C@@QAE@XZ PROC					; C::C, COMDAT
; _this$ = ecx

; 53   :    C() {c = 100;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0A@@QAE@XZ		; A::A
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7C@@6B@
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 0c 64 00
	00 00		 mov	 DWORD PTR [ecx+12], 100	; 00000064H
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0C@@QAE@XZ ENDP					; C::C
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ?h@B@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?h@B@@QAEXXZ PROC					; B::h, COMDAT
; _this$ = ecx

; 43   :    {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   :      a = 0;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 45   :      b = 0;

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 46   :    } 

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?h@B@@QAEXXZ ENDP					; B::h
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ?f@B@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?f@B@@UAEXXZ PROC					; B::f, COMDAT
; _this$ = ecx

; 37   :    {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   :       a = a + 100;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	83 c1 64	 add	 ecx, 100		; 00000064H
  00010	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00013	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 39   :       b = b + 200;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001c	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 40   :    }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?f@B@@UAEXXZ ENDP					; B::f
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ??0B@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0B@@QAE@XZ PROC					; B::B, COMDAT
; _this$ = ecx

; 35   :    B() {b = 10;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0A@@QAE@XZ		; A::A
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7B@@6B@
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 0c 0a 00
	00 00		 mov	 DWORD PTR [ecx+12], 10	; 0000000aH
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0B@@QAE@XZ ENDP					; B::B
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ?g@A@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?g@A@@UAEXXZ PROC					; A::g, COMDAT
; _this$ = ecx

; 25   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 26   :        a = a - 10;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	83 e9 0a	 sub	 ecx, 10			; 0000000aH
  00010	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00013	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 27   :     }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?g@A@@UAEXXZ ENDP					; A::g
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ?f@A@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?f@A@@UAEXXZ PROC					; A::f, COMDAT
; _this$ = ecx

; 20   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 21   :        a = a + 10;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00010	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00013	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 22   :     }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?f@A@@UAEXXZ ENDP					; A::f
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ??0A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0A@@QAE@XZ PROC					; A::A, COMDAT
; _this$ = ecx

; 18   :     A() {a = 1;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 04	 add	 ecx, 4
  0000d	e8 00 00 00 00	 call	 ??0X@@QAE@XZ		; X::X
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7A@@6B@
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0A@@QAE@XZ ENDP					; A::A
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ?xx@X@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?xx@X@@QAEXXZ PROC					; X::xx, COMDAT
; _this$ = ecx

; 10   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 11   : 		x = x + 10;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	89 0a		 mov	 DWORD PTR [edx], ecx

; 12   : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?xx@X@@QAEXXZ ENDP					; X::xx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\k-state\cis450\programs\courseprograms\polymorphism\polymorphism.cpp
;	COMDAT ??0X@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0X@@QAE@XZ PROC					; X::X, COMDAT
; _this$ = ecx

; 8    : 	X() { x = 5; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 05 00 00
	00		 mov	 DWORD PTR [eax], 5
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0X@@QAE@XZ ENDP					; X::X
_TEXT	ENDS
END

