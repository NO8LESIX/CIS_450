#include <iostream>
using namespace std;

class A
{
public:
	int i;
	short s;

	A() { i = 0; s = 0; }
	A(int i, short s) { this->i = i; this->s = s; }
};

void main()
{
	A *ap1 = new A();
	A *ap2 = new A(1, 3);
	A a1;
	A a2(2, 6);
	//char dummy;

	//cout << "ap1->i = " << ap1->i << ",  ap1->s = " << ap1->s << "\n";
	//cout << "ap2->i = " << ap2->i << ",  ap2->s = " << ap2->s << "\n";
	//cout << "a1.i = " << a1.i << ",  a1.s = " << a1.s << "\n";
	//cout << "a2.i = " << a2.i << ",  a2.s = " << a2.s << "\n";
	//cin >> dummy;
}

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28316.0 

	TITLE	c:\K-State\cis450\CoursePrograms\CS450_course_load\MMPrograms\Chap1_2\CPP\NewOperation\NewOperation.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0A@@QAE@XZ					; A::A
PUBLIC	??0A@@QAE@HF@Z					; A::A
PUBLIC	_main
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp
; File c:\K-State\cis450\CoursePrograms\CS450_course_load\MMPrograms\Chap1_2\CPP\NewOperation\NewOperation.cpp
_TEXT	SEGMENT
_a2$ = -40						; size = 8
_a1$ = -32						; size = 8
_ap2$ = -24						; size = 4
_ap1$ = -20						; size = 4
tv83 = -16						; size = 4
$T1 = -12						; size = 4
tv72 = -8						; size = 4
$T2 = -4						; size = 4
_main	PROC

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H

; 16   : 	A *ap1 = new A();

  00006	6a 08		 push	 8
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4
  00010	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  00013	83 7d fc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00017	74 0d		 je	 SHORT $LN3@main
  00019	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  0001c	e8 00 00 00 00	 call	 ??0A@@QAE@XZ		; A::A
  00021	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00024	eb 07		 jmp	 SHORT $LN4@main
$LN3@main:
  00026	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN4@main:
  0002d	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
  00030	89 45 ec	 mov	 DWORD PTR _ap1$[ebp], eax

; 17   : 	A *ap2 = new A(1, 3);

  00033	6a 08		 push	 8
  00035	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00040	83 7d f4 00	 cmp	 DWORD PTR $T1[ebp], 0
  00044	74 11		 je	 SHORT $LN5@main
  00046	6a 03		 push	 3
  00048	6a 01		 push	 1
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0004d	e8 00 00 00 00	 call	 ??0A@@QAE@HF@Z		; A::A
  00052	89 45 f0	 mov	 DWORD PTR tv83[ebp], eax
  00055	eb 07		 jmp	 SHORT $LN6@main
$LN5@main:
  00057	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN6@main:
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR tv83[ebp]
  00061	89 4d e8	 mov	 DWORD PTR _ap2$[ebp], ecx

; 18   : 	A a1;

  00064	8d 4d e0	 lea	 ecx, DWORD PTR _a1$[ebp]
  00067	e8 00 00 00 00	 call	 ??0A@@QAE@XZ		; A::A

; 19   : 	A a2(2, 6);

  0006c	6a 06		 push	 6
  0006e	6a 02		 push	 2
  00070	8d 4d d8	 lea	 ecx, DWORD PTR _a2$[ebp]
  00073	e8 00 00 00 00	 call	 ??0A@@QAE@HF@Z		; A::A

; 20   : 	//char dummy;
; 21   : 
; 22   : 	//cout << "ap1->i = " << ap1->i << ",  ap1->s = " << ap1->s << "\n";
; 23   : 	//cout << "ap2->i = " << ap2->i << ",  ap2->s = " << ap2->s << "\n";
; 24   : 	//cout << "a1.i = " << a1.i << ",  a1.s = " << a1.s << "\n";
; 25   : 	//cout << "a2.i = " << a2.i << ",  a2.s = " << a2.s << "\n";
; 26   : 	//cin >> dummy;
; 27   : }

  00078	33 c0		 xor	 eax, eax
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\K-State\cis450\CoursePrograms\CS450_course_load\MMPrograms\Chap1_2\CPP\NewOperation\NewOperation.cpp
;	COMDAT ??0A@@QAE@HF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
_s$ = 12						; size = 2
??0A@@QAE@HF@Z PROC					; A::A, COMDAT
; _this$ = ecx

; 11   : 	A(int i, short s) { this->i = i; this->s = s; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _i$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	66 8b 45 0c	 mov	 ax, WORD PTR _s$[ebp]
  00016	66 89 42 04	 mov	 WORD PTR [edx+4], ax
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??0A@@QAE@HF@Z ENDP					; A::A
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\K-State\cis450\CoursePrograms\CS450_course_load\MMPrograms\Chap1_2\CPP\NewOperation\NewOperation.cpp
;	COMDAT ??0A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0A@@QAE@XZ PROC					; A::A, COMDAT
; _this$ = ecx

; 10   : 	A() { i = 0; s = 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00010	33 c9		 xor	 ecx, ecx
  00012	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00015	66 89 4a 04	 mov	 WORD PTR [edx+4], cx
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0A@@QAE@XZ ENDP					; A::A
_TEXT	ENDS
END
